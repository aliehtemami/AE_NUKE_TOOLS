set cut_paste_input [stack 0]
version 12.2 v2
push $cut_paste_input
NoOp {
 name AE_ScaleNodes
 selected true
 xpos 17540
 ypos -3030
 addUserKnob {20 User}
 addUserKnob {26 textHeader l "" +STARTLINE T "<h3><i>AE</i> <font size = 50>\[Scale]</font> <i>NODES"}
 addUserKnob {26 _1 l "" +STARTLINE T " "}
 addUserKnob {2 getFile l "menu.py path" t "Browse and select the Menu.py file in your system."}
 addUserKnob {1 scaleNodesCode +INVISIBLE}
 scaleNodesCode "######## AE_ScaleNodes #### START ##################################################\n\n#### IMPORT MODULES ####\nfrom time import sleep\nfrom threading import Thread\n\n\n#### RIGHT #####\ndef scaleRight():\n\n    nodesList = nuke.selectedNodes()\n    nodesList.reverse()\n    pivot = nodesList\[0]\['xpos'].value()\n    \n    for p in range(10):        \n\n        for n in nodesList:\n            node = n\n            delta = abs(node\['xpos'].value()-pivot)\n            node.setXpos(int(delta/50)+int(node\['xpos'].value()))\n\n        sleep(0.001)\n        print \"\"        \n\n\n\n\n#### Left #####\ndef scaleLeft():\n\n    nodesList = nuke.selectedNodes()\n    nodesList.reverse()\n    pivot = nodesList\[0]\['xpos'].value()\n    \n    for p in range(10):        \n\n        for n in nodesList:\n            node = n\n            delta = abs(node\['xpos'].value()-pivot)\n            node.setXpos(int(-delta/50)+(int(node\['xpos'].value())))\n\n        sleep(0.001)\n        print \"\"  \n\n\n\n#### Up #####\ndef scaleUp():\n\n    nodesList = nuke.selectedNodes()\n    nodesList.reverse()\n    pivot = nodesList\[0]\['ypos'].value()\n    \n    for p in range(10):        \n\n        for n in nodesList:\n            node = n\n            delta = abs(node\['ypos'].value()-pivot)\n            node.setYpos(int(-delta/50)+(int(node\['ypos'].value())))\n\n        sleep(0.001)\n        print \"\"  \n\n\n#### Down #####\ndef scaleDown():\n\n    nodesList = nuke.selectedNodes()\n    nodesList.reverse()\n    pivot = nodesList\[0]\['ypos'].value()\n    \n    for p in range(10):        \n\n        for n in nodesList:\n            node = n\n            delta = abs(node\['ypos'].value()-pivot)\n            node.setYpos(int(delta/50)+(int(node\['ypos'].value())))\n\n        sleep(0.001)\n        print \"\"  \n\n#### Exec Scale RIGHT ####\ndef execScaleRight():\n    countdown_thread = threading.Thread(target = scaleRight)\n    countdown_thread.start()\n\n#### Exec Scale LEFT ####\ndef execScaleLeft():\n    countdown_thread = threading.Thread(target = scaleLeft)\n    countdown_thread.start()\n\n#### Exec Scale UP ####\ndef execScaleUP():\n    countdown_thread = threading.Thread(target = scaleUp)\n    countdown_thread.start()\n\n#### Exec Scale DOWN ####\ndef execScaleDOWN():\n    countdown_thread = threading.Thread(target = scaleDown)\n    countdown_thread.start()\n\n\n##### Assign Shortcuts ######\n\n\nutilitiesMenu.addCommand(\"Edit/Node/AE_scaleNodes/SC_Right\", 'execScaleRight()', \"SCALENODES_KEY_RIGHT\", shortcutContext=2)\nutilitiesMenu.addCommand(\"Edit/Node/AE_scaleNodes/SC_Left\", 'execScaleLeft()', \"SCALENODES_KEY_LEFT\", shortcutContext=2)\nutilitiesMenu.addCommand(\"Edit/Node/AE_scaleNodes/SC_Up\", 'execScaleUP()', \"SCALENODES_KEY_UP\", shortcutContext=2)\nutilitiesMenu.addCommand(\"Edit/Node/AE_scaleNodes/SC_Down\", 'execScaleDOWN()', \"SCALENODES_KEY_DOWN\", shortcutContext=2)\n\n\n\n######## AE_ScaleNodes #### END ####################################################"
 addUserKnob {26 ""}
 addUserKnob {22 addScaleNodes l "<font  color = orange><b>Add Scale Nodes" T "scaleNodesCode = nuke.thisNode()\['scaleNodesCode'].value()\n\nuserRight = nuke.thisNode()\['rightKey'].value()\nuserLeft = nuke.thisNode()\['leftKey'].value()\nuserUp = nuke.thisNode()\['upKey'].value()\nuserDown = nuke.thisNode()\['downKey'].value()\n\nscaleNodesCode = scaleNodesCode.replace(\"SCALENODES_KEY_RIGHT\", userRight)\nscaleNodesCode = scaleNodesCode.replace(\"SCALENODES_KEY_LEFT\", userLeft)\nscaleNodesCode = scaleNodesCode.replace(\"SCALENODES_KEY_UP\", userUp)\nscaleNodesCode = scaleNodesCode.replace(\"SCALENODES_KEY_DOWN\", userDown)\n\nfile_path = nuke.thisNode()\['getFile'].value()\n\nwith open(file_path, \"a\") as file:\n    file.write('\\n' + scaleNodesCode)\n\nnuke.message(\"AE_ScaleNodes Function added to the menu.py file\\nplease restart Nuke to be able to use the function\")" +STARTLINE}
 addUserKnob {22 clearCode l "<b>Clear Code" -STARTLINE T "file_path = nuke.thisNode()\['getFile'].value()\n\nstart_context = \"######## AE_ScaleNodes #### START ##################################################\"\nend_context = \"######## AE_ScaleNodes #### END ####################################################\"\n\n# Open the original file for reading and writing\nwith open(file_path, \"r+\") as file:\n    # Read the file and store its contents as a list of lines\n    lines = file.readlines()\n    # Reset the file pointer to the beginning\n    file.seek(0)\n    # Traverse the list of lines and remove the lines between the start and end context\n    inside_range = False\n    for line in lines:\n        if start_context in line:\n            inside_range = True\n        elif end_context in line:\n            inside_range = False\n            continue\n        if not inside_range:\n            file.write(line)\n    # Truncate the file at the current position (i.e. remove any extra lines)\n    file.truncate()\n\nnuke.message(\"AE_ScaleNodes Function removed from the menu.py file\\nplease restart Nuke to be able to see the result\")"}
 addUserKnob {26 ""}
 addUserKnob {20 scaleNodesGRP l "Scale Nodes Keys" n 1}
 addUserKnob {1 rightKey l "<b><font color = orange>Right"}
 rightKey shift+right
 addUserKnob {1 leftKey l "<b><font color = orange>Left" -STARTLINE}
 leftKey shift+left
 addUserKnob {1 upKey l "<b><font color = orange>Up" -STARTLINE}
 upKey shift+up
 addUserKnob {1 downKey l "<b><font color = orange>Down" -STARTLINE}
 downKey shift+down
 addUserKnob {22 updateButton l "<b><font color = green>Update Keys" T "nuke.thisNode()\['clearCode'].execute()\nnuke.thisNode()\['addScaleNodes'].execute()\n\nnuke.message(\"AE_ScaleNodes Function updated in the menu.py file\\nplease restart Nuke to be able to see the result\")" +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 textTail l "" +STARTLINE T "<b><i><font color = gray>.: by Ali Ehtemami"}
 addUserKnob {20 tab l Info}
 addUserKnob {26 text l "" +STARTLINE T "Instructions on how to use this tool:\n\n1. Click on the browser icon and locate the \"menu.py\" file in your .nuke folder.\n2. Set the hotkeys to your preference.\n3. Click on \"Add Scale Nodes\".\n4. The first node you select in the DAG will serve as the pivot for the node scale function.\n5. Use the hotkeys to scale right, left, up, and down.\n\nAdditionally:\n\n- You can remove the AE_Scale_Nodes code from the \"menu.py\" file by clicking on the \"Clear Code\" button.\n- You can update the hotkeys by clicking on the \"Update\" button.\n\nSpecial thanks to Mateusz KrzÄ…stek for fixing some DAG animation errors.\n\naliehtemami.com\nali.ehtemami1@gmail.com"}
}
